version: "3.8"

networks:
  frontend:
  backend:

services:
  workspace:
    container_name: workspace
    build:
      context: ./workspace
    tty: true
    volumes:
      - ${CODE_PATH}:/var/workspace
    ports:
      - "2222:22"
      - "7001:8080"
      - "7002:8000"
    networks:
      - frontend
      - backend

  ### ============================================
  ### Web Servers
  ### ============================================
  nginx:
    container_name: nginx
    build:
      context: ./nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ${SITES_PATH}:/usr/share/nginx/html
      - ${DATA_PATH}/nginx/logs:/var/log/nginx
    networks:
      - frontend
      - backend

  caddy:
    container_name: caddy
    build:
      context: ./caddy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - ${SITES_PATH}:/srv
      - ${DATA_PATH}/caddy/config:/config
      - ${DATA_PATH}/caddy/data:/data
      - ${DATA_PATH}/caddy/logs:/var/log/caddy
    networks:
      - frontend
      - backend

  ### ============================================
  ### Databases
  ### ============================================
  mysql:
    container_name: mysql
    build:
      context: ./mysql
    restart: always
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${TZ}
    volumes:
      - ${DATA_PATH}/mysql:/var/lib/mysql
    networks:
      - backend

  redis:
    container_name: redis
    build:
      context: ./redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ${DATA_PATH}/redis:/data
    networks:
      - backend

  mongo:
    container_name: mongo
    build:
      context: ./mongo
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - ${DATA_PATH}/mongo/data:/data/db
      - ${DATA_PATH}/mongo/config:/data/configdb
    networks:
      - backend

  ### ============================================
  ### Applications
  ### ============================================
  wordpress:
    container_name: wordpress
    build:
      context: ./wordpress
    restart: always
    depends_on:
      - mysql
    environment:
      - WORDPRESS_DB_HOST=${WORDPRESS_DB_HOST}
      - WORDPRESS_DB_USER=${WORDPRESS_DB_USER}
      - WORDPRESS_DB_PASSWORD=${WORDPRESS_DB_PASSWORD}
      - WORDPRESS_DB_NAME=${WORDPRESS_DB_NAME}
    ports:
      - "7101:80"
    volumes:
      - ${DATA_PATH}/wordpress:/var/www/html
    networks:
      - frontend
      - backend

  phpmyadmin:
    container_name: phpmyadmin
    build:
      context: ./phpmyadmin
    restart: always
    environment:
      - PMA_ARBITRARY=${PMA_ARBITRARY}
    ports:
      - "7102:80"
    networks:
      - frontend
      - backend

  adminer:
    container_name: adminer
    build:
      context: ./adminer
    restart: always
    ports:
      - "7103:8080"
    networks:
      - frontend
      - backend
